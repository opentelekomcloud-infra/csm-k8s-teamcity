---
- name: Prepare user
  hosts: kube-master
  become: yes
  tasks:
    - name: prepare cluster config
      shell: |
        sudo cp /etc/kubernetes/admin.conf $HOME/
        sudo chown $(id -u):$(id -g) $HOME/admin.conf
        export KUBECONFIG=$HOME/admin.conf

    - name: Install required packages
      apt:
        name:
          - python3-setuptools
          - python3-pip
          - build-essential
          - python3-dev

    - name: Install openshift
      pip:
        name: openshift

- name: Prepare pods
  hosts: kube-master
  become: yes
  tasks:
    - name: Apply TeamCity Storage definition.
      k8s:
        state: present
        definition: "{{ lookup('template', 'files/teamcity/teamcity-storage.yml') }}"

    - name: Apply TeamCity Storage Claim definition.
      k8s:
        state: present
        definition: "{{ lookup('template', 'files/teamcity/teamcity-storage_claim.yml') }}"

    - name: Apply TeamCity Server definition.
      k8s:
        state: present
        definition: "{{ lookup('template', 'files/teamcity/teamcity-server.yml') }}"

    - name: Apply TeamCity service definition.
      k8s:
        state: present
        definition: "{{ lookup('template', 'files/teamcity/teamcity-service.yml') }}"
      register: k8s_service

    - name: Get k8s service port from output
      set_fact:
        teamcity_port: "{{ k8s_service.result.spec.ports[0].nodePort }}"

    - name: Apply TeamCity Agent definition.
      k8s:
        state: present
        definition: "{{ lookup('template', 'files/teamcity/teamcity-agent.yml') }}"

- name: Configure Bastion
  hosts: bastion
  become: yes
  vars:
    nodename: "{{ groups['nodes'][0] }}"
    psql_addr: "{{ db_address.split(':')[0] }}"
    psql_port: "{{ db_address.split(':')[1] }}"
  tasks:
    - name: Install required packages
      apt:
        name:
          - python3-setuptools
          - python3-pip
          - libpq-dev
          - build-essential
          - python3-dev
          - cron

    - name: Install psycopg2
      pip:
        name: psycopg2

    - name: Create a new database with name "teamcity"
      postgresql_db:
        login_user: "{{ db_username }}"
        login_host: "{{ psql_addr }}"
        login_password: "{{ db_password }}"
        port: "{{ psql_port }}"
        name: teamcity

- name: Install nginx reverse proxy to Bastion
  hosts: bastion
  become: yes
  vars_files:
  - "./vars/nginx_parameters.yml"
  roles:
    - role: geerlingguy.certbot
      vars:
        certbot_admin_email: "teamcity@{{ domain }}"
        certbot_create_if_missing: true
        certbot_create_standalone_stop_services: []
        certbot_auto_renew_user: linux
        certbot_auto_renew_minute: "20"
        certbot_auto_renew_hour: "5"
        certbot_certs:
          - domains:
              - "{{ domain }}"
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_upstreams:
          - name: teamcity
            servers:
              - "{{ hostvars.node1.ansible_host }}:{{ hostvars.master1.teamcity_port }}"
              - "{{ hostvars.node2.ansible_host }}:{{ hostvars.master1.teamcity_port }}"
        nginx_vhosts:
          - listen: "443 ssl"
            server_name: "{{ domain }}"
            extra_parameters: "{{ extra_parameters }}"
